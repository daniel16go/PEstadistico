@model Productivo.Core.ViewModels.IoTMetrics.IoTMetricsViewModel

<html>
<head>
    <meta http-equiv="Refresh" content="300">
    <script src="~/FusionCharts/fusioncharts.js"></script>
    <script src="~/FusionCharts/themes/fusioncharts.theme.fusion.js"></script>
    <!-- Data function static -->
    <script type="text/javascript">

        FusionCharts.ready(function () {
            var Data = [];
            $.getJSON(window.location.href.replace('/Index', '/LastRecordsDataSearch'), {},
                function (data) {
                    console.log(data);
                    var Chart = data["chart"];

                    for (let i = 0; i < data["categories"].length; i++) {
                        Data.push(JSON.parse(JSON.stringify({ label: data["categories"][i], value: data["data"][i] })));
                    }
                    var myChart = new FusionCharts({
                        type: "line",
                        renderAt: "chart-container-sh",
                        width: "100%",
                        height: "400",
                        dataFormat: "json",
                        dataSource: {
                            chart: Chart,
                            data: Data
                        }
                    }).render();
                });
        });

    </script>

    <!-- Data function real time -->
    <script type="text/javascript">
        FusionCharts.ready(function () {
            var Categories = [];
            var Data = [];

            $.getJSON(window.location.href.replace('/Index', '/LastRecordsData'), { n: 10 },
                function (data) {
                    for (let element in data["categories"]) {
                        Categories.push(JSON.parse(JSON.stringify({ label: data["categories"][element] })));
                    }
                    for (let element in data["data"]) {
                        Data.push(JSON.parse(JSON.stringify({ value: data["data"][element] })));
                    }
                    var Chart = data["chart"];
                    new FusionCharts({
                        type: "realtimeline",

                        renderAt: "chart-container-rt",
                        width: "100%",
                        height: "400",
                        dataFormat: "json",
                        dataSource: {
                            chart: Chart,
                            categories: [{ "category": Categories }],
                            dataset: [{ "data": Data }]
                        },
                        events: {
                            initialized: function (evt, arg) {
                                // Get reference to the chart
                                var chartRef = evt.sender;

                                function updateData() {
                                    $.getJSON(window.location.href.replace('/Index', '/LastRecordsData'), { n: 1 },
                                        function (data) {
                                            for (let element in data["categories"]) {
                                                var lastCategory = data["categories"][element];
                                            }
                                            for (let element in data["data"]) {
                                                var lastValue = data["data"][element];
                                            }
                                            strData = "&label=" + lastCategory + "&value=" + lastValue;
                                            // Feed it to chart.
                                            chartRef.feedData(strData);
                                        });
                                }
                                chartRef.intervalUpdateId = setInterval(updateData, 60000);
                            },
                            disposed: function (evt, args) {
                                clearInterval(evt.sender.intervalUpdateId);
                            }
                        }
                    }).render();
                });
        });
    </script>

</head>
<body>
    <div class="row">
        <div class="col-xl-12">
            <div id="panel-1" class="panel">
                <div class="panel-hdr">
                    <h2></h2>
                    <div class="panel-toolbar">
                        <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Minimizar"></button>
                        <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Maximizar"></button>
                        <button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Cerrar"></button>
                    </div>
                </div>
                <div class="panel-container show">
                    <div class="panel-content">
                        <form enctype="multipart/form-data" asp-action="Index" method="get">
                            <input type="hidden" asp-for="IotId" value="@Model.IotId" />
                            <input type="hidden" asp-for="IotVariable" value="@Model.IotVariable" />
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="StartDate" class="control-label h4-Pandora"></label>
                                        <input asp-for="StartDate" class="form-control" />
                                        <span asp-validation-for="StartDate" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label asp-for="EndDate" class="control-label h4-Pandora"></label>
                                        <input asp-for="EndDate" class="form-control" />
                                        <span asp-validation-for="EndDate" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <button type="submit" class="h3-Productivo  btn btn-primary btn-sm"><i class="glyphicon glyphicon-floppy-saved"></i> Buscar</button> |
                                    @Html.ActionLink("Online", "Index", "IoTMetrics", new { iotId = Model.IotId, iotVariable = Model.IotVariable }, new { @class = "h3-Productivo  btn btn-success btn-sm" }) |
                                    @Html.ActionLink("Regresar", "Details", "IoTs", new { id = ViewBag.id }, new { @class = "h3-Productivo  btn btn-warning btn-sm" })

                                </div>
                            </div>
                        </form>
                        <br />
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="text-center">
        <h1 class="display-4 colortitle-Productivo">IoT Variable Online Data DashBoard</h1>
        <p></p>
        <div class="row">
            <div class="col-xl-12">
                <div id="panel-1" class="panel">
                    <div class="panel-hdr">
                        <h2></h2>
                        <div class="panel-toolbar">
                            <button class="btn btn-panel" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Minimizar"></button>
                            <button class="btn btn-panel" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Maximizar"></button>
                            <button class="btn btn-panel" data-action="panel-close" data-toggle="tooltip" data-offset="0,10" data-original-title="Cerrar"></button>
                        </div>
                    </div>
                    @if (Model.StartDate == null)
                    {
                        <div class="panel-container show">
                            <div class="panel-content">
                                <div id="chart-container-rt">Productivo Core Loading Data!!!</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="panel-container show">
                            <div class="panel-content">
                                <div id="chart-container-sh">Productivo Core Loading Data!!!</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</body>
</html>
