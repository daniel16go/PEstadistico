#pragma checksum "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Utilities\DisplayProperty.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ccf153be042fead873373287eb43bd59e0fbb24e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Template_Utilities_DisplayProperty), @"mvc.1.0.view", @"/Views/Template/Utilities/DisplayProperty.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Productivo.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Productivo.Web.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Productivo.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ccf153be042fead873373287eb43bd59e0fbb24e", @"/Views/Template/Utilities/DisplayProperty.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3cb4063a92509016e34f5fa38813b43f5c4dd013", @"/Views/_ViewImports.cshtml")]
    public class Views_Template_Utilities_DisplayProperty : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("screen, print"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/theme-demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Utilities\DisplayProperty.cshtml"
   
	ViewData["Title"] = "Display Property";
	ViewData["PageName"] = "utilities_display_property";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-window'></i>  Display Property";
	ViewData["Category1"] = "Utilities";
	ViewData["PageDescription"] = "Quickly and responsively toggle the display value of components and more with our display utilities.";

#line default
#line hidden
#nullable disable
            DefineSection("HeadBlock", async() => {
                WriteLiteral("\r\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "ccf153be042fead873373287eb43bd59e0fbb24e5445", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral("<div class=\"alert alert-primary alert-dismissible\">\r\n\t<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n\t<span aria-hidden=\"true\">\r\n\t<i");
            BeginWriteAttribute("class", " class=\"", 633, "\"", 678, 2);
#nullable restore
#line 14 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Utilities\DisplayProperty.cshtml"
WriteAttributeValue("", 641, Settings.Theme.IconPrefix, 641, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 669, "fa-times", 670, 9, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
	</span>
	</button>
	<div class=""d-flex flex-start w-100"">
		<div class=""mr-2 d-sm-none d-md-block"">
			<span class=""icon-stack icon-stack-lg"">
			<i class=""base base-6 icon-stack-3x opacity-100 color-primary-500""></i>
			<i class=""base base-10 icon-stack-2x opacity-100 color-primary-300 fa-flip-vertical""></i>
			<i");
            BeginWriteAttribute("class", " class=\"", 1010, "\"", 1092, 5);
#nullable restore
#line 22 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Utilities\DisplayProperty.cshtml"
WriteAttributeValue("", 1018, Settings.Theme.IconPrefix, 1018, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 1046, "fa-info", 1047, 8, true);
            WriteAttributeValue(" ", 1054, "icon-stack-1x", 1055, 14, true);
            WriteAttributeValue(" ", 1068, "opacity-100", 1069, 12, true);
            WriteAttributeValue(" ", 1080, "color-white", 1081, 12, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
			</span>
		</div>
		<div class=""d-flex flex-fill"">
			<div class=""flex-fill"">
				<span class=""h5"">How it works</span>
				<br> Change the value of the display property with our responsive display utility classes. We purposely support only a subset of all possible values for display. Classes can be combined for various effects as you need.
			</div>
		</div>
	</div>
</div>
<div class=""row"">
	<div class=""col-xl-6"">
		<div id=""panel-1"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Displaying <span class=""fw-300""><i>elements</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data");
            WriteLiteral(@"-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						Display utility classes that apply to all <a href=""/utilities/responsivegrid"" target=""_blank"">breakpoints</a>, from <code>xs</code> to <code>xl</code>, have no breakpoint abbreviation in them. This is because those classes are applied from <code>min-width: 0;</code> and up, and thus are not bound by a media query. The remaining breakpoints, however, do include a breakpoint abbreviation
					</div>
					<p>As such, the classes are named using the format:</p>
					<ul class=""list-spaced"">
						<li><code>.d-{value}</code> for <code>xs</code></li>
						<li><code>.d-{breakpoint}-{value}</code> for <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code>.</li>
					</ul>
					<p>Where <em>value</em> is one of:</p>
					<ul class=""list-spaced"">
						<li><code>none</code></li>
						<li><code>inline</code></li>
						");
            WriteLiteral(@"<li><code>inline-block</code></li>
						<li><code>block</code></li>
						<li><code>table</code></li>
						<li><code>table-cell</code></li>
						<li><code>table-row</code></li>
						<li><code>flex</code></li>
						<li><code>inline-flex</code></li>
					</ul>
					<p>The media queries effect screen widths with the given breakpoint <em>or larger</em>. For example, <code>.d-lg-none</code> sets <code>display: none;</code> on both <code>lg</code> and <code>xl</code> screens.</p>
				</div>
			</div>
		</div>
		<div id=""panel-2"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Hiding <span class=""fw-300""><i>elements (BS3 method)</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<butt");
            WriteLiteral(@"on class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						This method for hidding elements is from Bootstrap version 3.0, it is a more quicker way of hiding responsive elements. However, the Bootstrap 4 method will give you greater control. <strong>Remember to use either of the method on a single element, otherwise it may not work</strong>
					</div>
					<div class=""table-responsive"">
						<table class=""table table-bordered"">
							<thead>
								<tr>
									<th scope=""col"" class=""border-top-0"" style=""width: 150px""></th>
									<th scope=""col"">
										Extra small devices
										<small class=""d-block fs-sm text-muted"">
											Phones (&lt;0px)
										</small>
									</th>
									<th scope=""col"">
										Small devices
										<small class=""d-block fs-sm text-");
            WriteLiteral(@"muted"">
											Tablets (≥576px)
										</small>
									</th>
									<th scope=""col"">
										Medium devices
										<small class=""d-block fs-sm text-muted"">
											Desktops (≥768px)
										</small>
									</th>
									<th scope=""col"">
										Large devices
										<small class=""d-block fs-sm text-muted"">
											Desktops (≥992px)
										</small>
									</th>
									<th scope=""col"">
										Extra Large devices
										<small class=""d-block fs-sm text-muted"">
											Desktops (≥1200px)
										</small>
									</th>
								</tr>
							</thead>					
							<tbody>
								<tr>
									<th scope=""row""><code>.hidden-xs-down</code></th>
									<td class=""text-danger"">hidden</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden");
            WriteLiteral(@"-sm-down</code></th>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-md-down</code></th>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-lg-down</code></th>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-success"">visible</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-xl-down</code></th>
									<td class=""text-danger"">");
            WriteLiteral(@"hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-xs-up</code></th>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-sm-up</code></th>
									<td class=""text-success"">visible</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-md-up</code></th>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
								");
            WriteLiteral(@"	<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-lg-up</code></th>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-danger"">hidden</td>
									<td class=""text-danger"">hidden</td>
								</tr>
								<tr>
									<th scope=""row""><code>.hidden-xl-up</code></th>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-success"">visible</td>
									<td class=""text-danger"">hidden</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class=""col-xl-6"">
		<div id=""panel-3"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Display  <span class=""fw-300""><i>Print");
            WriteLiteral(@"</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<p>
						Change the <code>display</code> value of elements when printing with our print display utility classes. Includes support for the same <code>display</code> values as our responsive <code>.d-*</code> utilities.
					</p>
					<ul class=""list-spaced"">
						<li><code>.d-print-none</code></li>
						<li><code>.d-print-inline</code></li>
						<li><code>.d-print-inline-block</code></li>
						<li><code>");
            WriteLiteral(@".d-print-block</code></li>
						<li><code>.d-print-table</code></li>
						<li><code>.d-print-table-row</code></li>
						<li><code>.d-print-table-cell</code></li>
						<li><code>.d-print-flex</code></li>
						<li><code>.d-print-inline-flex</code></li>
					</ul>
					<p>The print and display classes can be combined.</p>
				</div>
			</div>
		</div>
		<div id=""panel-4"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Hiding <span class=""fw-300""><i>elements (BS4 method)</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<d");
            WriteLiteral(@"iv class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						<p>For faster mobile-friendly development, use responsive display classes for showing and hiding elements by device. Avoid creating entirely different versions of the same site, instead hide elements responsively for each screen size.</p>
						<p>To hide elements simply use the <code>.d-none</code> class or one of the <code>.d-{sm,md,lg,xl}-none</code> classes for any responsive screen variation.</p>
						<p>To show an element only on a given interval of screen sizes you can combine one <code>.d-*-none</code> class with a <code>.d-*-*</code> class, for example <code>.d-none .d-md-block .d-xl-none</code> will hide the element for all screen sizes except on medium and large devices.</p>
					</div>
					<table class=""table table-bordered"">
						<thead>
							<tr>
								<th>Screen Size</th>
								<th>Class</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>Hidde");
            WriteLiteral(@"n on all</td>
								<td><code>.d-none</code></td>
							</tr>
							<tr>
								<td>Hidden only on xs</td>
								<td><code>.d-none .d-sm-block</code></td>
							</tr>
							<tr>
								<td>Hidden only on sm</td>
								<td><code>.d-sm-none .d-md-block</code></td>
							</tr>
							<tr>
								<td>Hidden only on md</td>
								<td><code>.d-md-none .d-lg-block</code></td>
							</tr>
							<tr>
								<td>Hidden only on lg</td>
								<td><code>.d-lg-none .d-xl-block</code></td>
							</tr>
							<tr>
								<td>Hidden only on xl</td>
								<td><code>.d-xl-none</code></td>
							</tr>
							<tr>
								<td>Visible on all</td>
								<td><code>.d-block</code></td>
							</tr>
							<tr>
								<td>Visible only on xs</td>
								<td><code>.d-block .d-sm-none</code></td>
							</tr>
							<tr>
								<td>Visible only on sm</td>
								<td><code>.d-none .d-sm-block .d-md-none</code></td>
							</tr>
							<tr>
								<td>Visible only on md</");
            WriteLiteral(@"td>
								<td><code>.d-none .d-md-block .d-lg-none</code></td>
							</tr>
							<tr>
								<td>Visible only on lg</td>
								<td><code>.d-none .d-lg-block .d-xl-none</code></td>
							</tr>
							<tr>
								<td>Visible only on xl</td>
								<td><code>.d-none .d-xl-block</code></td>
							</tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
");
            DefineSection("ScriptsBlock", async() => {
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<Productivo.Core.Entities.ApplicationUser> signInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<Productivo.Core.Entities.ApplicationUser> userManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IAuthorizationService authorizationService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
