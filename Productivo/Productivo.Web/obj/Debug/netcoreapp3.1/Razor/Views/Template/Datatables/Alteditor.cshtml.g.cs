#pragma checksum "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "efe0b442644bc9bdee8352731c8d3c30948773e5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Template_Datatables_Alteditor), @"mvc.1.0.view", @"/Views/Template/Datatables/Alteditor.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Productivo.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Productivo.Web.Extensions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\_ViewImports.cshtml"
using Productivo.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"efe0b442644bc9bdee8352731c8d3c30948773e5", @"/Views/Template/Datatables/Alteditor.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3cb4063a92509016e34f5fa38813b43f5c4dd013", @"/Views/_ViewImports.cshtml")]
    public class Views_Template_Datatables_Alteditor : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("screen, print"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/datagrid/datatables/datatables.bundle.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/theme-demo.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/datagrid/datatables/datatables.bundle.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
   
	ViewData["Title"] = "AltEditor (beta)";
	ViewData["PageName"] = "datatables_alteditor";
	ViewData["Category1"] = "Datatables";
	ViewData["Heading"] = "<i class='subheader-icon fal fa-table'></i> DataTables: <span class='fw-300'>AltEditor (beta)</span> <sup class='badge badge-primary fw-500'>ADDON</sup>";
	ViewData["PageDescription"] = "Custom made editor plugin designed for Datatables";

#line default
#line hidden
#nullable disable
            DefineSection("HeadBlock", async() => {
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "efe0b442644bc9bdee8352731c8d3c30948773e56220", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\t");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "efe0b442644bc9bdee8352731c8d3c30948773e57484", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            WriteLiteral(@"<div class=""alert alert-primary"">
	<div class=""d-flex flex-start w-100"">
		<div class=""mr-2 hidden-md-down"">
			<span class=""icon-stack icon-stack-lg"">
				<i class=""base base-2 icon-stack-3x opacity-100 color-primary-500""></i>
				<i class=""base base-2 icon-stack-2x opacity-100 color-primary-300""></i>
				<i");
            BeginWriteAttribute("class", " class=\"", 924, "\"", 1006, 5);
#nullable restore
#line 18 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
WriteAttributeValue("", 932, Settings.Theme.IconPrefix, 932, 28, false);

#line default
#line hidden
#nullable disable
            WriteAttributeValue(" ", 960, "fa-info", 961, 8, true);
            WriteAttributeValue(" ", 968, "icon-stack-1x", 969, 14, true);
            WriteAttributeValue(" ", 982, "opacity-100", 983, 12, true);
            WriteAttributeValue(" ", 994, "color-white", 995, 12, true);
            EndWriteAttribute();
            WriteLiteral(@"></i>
			</span>
		</div>
		<div class=""d-flex flex-fill"">
			<div class=""flex-fill"">
				<span class=""h5"">About</span>
				<p>
					DataTables AltEditor is a MIT licensed free editor. The plugin adds capabilities to add, edit and delete rows in your datatables through the use of modals. We have modified the editor extensively to be used with ");
#nullable restore
#line 25 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                                                                                                                                                                                                                   Write(Settings.AppName);

#line default
#line hidden
#nullable disable
            WriteLiteral(" and make your job a little easier. This current version of AltEditor is exclusive to ");
#nullable restore
#line 25 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                                                                                                                                                                                                                                                                                                                          Write(Settings.App);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" and we intend to keep it up to date to be compatible with DataTables.
				</p>
				<p class=""m-0"">
					You can find the definitions of its elements on their <a href=""https://github.com/KasperOlesen/DataTable-AltEditor"" target=""_blank"">official github</a> page. Note: Only use the exclusive plugin included with this WebApp as the one on github may not be compatible with ");
#nullable restore
#line 28 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                                                                                                                                                                                                                                                                           Write(Settings.App);

#line default
#line hidden
#nullable disable
            WriteLiteral(@".
				</p>
			</div>
		</div>
	</div>
</div>
<div class=""row"">
	<div class=""col-xl-12"">
		<div id=""panel-1"" class=""panel"">
			<div class=""panel-hdr"">	
				<h2>
					Example <span class=""fw-300""><i>Table</i></span> 
				</h2>
				<div class=""panel-toolbar"">
					<button class=""btn btn-panel"" data-action=""panel-collapse"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Collapse""></button>
					<button class=""btn btn-panel"" data-action=""panel-fullscreen"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Fullscreen""></button>
					<button class=""btn btn-panel"" data-action=""panel-close"" data-toggle=""tooltip"" data-offset=""0,10"" data-original-title=""Close""></button>
				</div>
			</div>
			<div class=""panel-container show"">
				<div class=""panel-content"">									
					<div class=""panel-tag"">
						<p>
							Datatable accepts the following callback functions as arguments: <code>onAddRow(datatable, rowdata, success, error)</code>, <code>onEditRow(datatable, rowdata, su");
            WriteLiteral(@"ccess, error)</code>, <code>onDeleteRow(datatable, rowdata, success, error)</code>
						</p>
						<p>
							In the most common case, these function should call <code>$.ajax </code>as expected by the webservice. The two functions success and error should be passed as arguments to <code>$.ajax</code>. Webservice must return the modified row in JSON format, because the success() function expects this. Otherwise you have to write your own success() callback (e.g. refreshing the whole table).
						</p>
					</div>
					<ul class=""nav nav-tabs"" role=""tablist"">
						<li class=""nav-item"">
							<a class=""nav-link active p-3"" data-toggle=""tab"" href=""#tab_default-1"" role=""tab"">
								<i class=""fal fa-table text-success""></i>
								<span class=""hidden-sm-down ml-1"">Alt-Editor Example</span>
							</a>
						</li>
						<li class=""nav-item"">
							<a class=""nav-link p-3"" data-toggle=""tab"" href=""#tab_default-2"" role=""tab"">
								<i class=""fal fa-cog text-info""></i>
								<span class=""hidden");
            WriteLiteral(@"-sm-down ml-1"">Supported Modifiers</span>
							</a>
						</li>
					</ul>
					<div class=""tab-content pt-4"">
						<div class=""tab-pane fade show active"" id=""tab_default-1"" role=""tabpanel"">
							<div class=""row"">
								<div class=""col-xl-12"">
									<table id=""dt-basic-example"" class=""table table-bordered table-hover table-striped w-100""></table>
								</div>
								<div class=""col-xl-12"">
									<hr class=""mt-5 mb-5"">
									<h5>Event <i>logs (AJAX Calls)</i></h5>
									<div id=""app-eventlog"" class=""alert alert-primary p-1 h-auto my-3""></div>
								</div>
							</div>	
						</div>
						<div class=""tab-pane fade"" id=""tab_default-2"" role=""tabpanel"">
							<div class=""alert alert-info"">
								<strong>
									IE Support
								</strong>
								<br>
									The latest update for Alt-Editor has dropped support for IE in general. We have included the latest version of Alt-editor (catered for Productivo) inside <code>src/custom/plugins/datatables-alteditor/data");
            WriteLiteral(@"tables-alteditor-latest.js</code> found only in the HTML flavor. You may switch to this latest version of Alt editor to gain access to the <strong>Support Modifiers</strong> below.
							</div>
							<div class=""row"">
								<div class=""col-12"">
									<table class=""table table-bordered table-striped"">
										<thead>
											<tr>
												<th>Column option</th>
												<th>Accepted values</th>
												<th>Description</th>
											</tr>
										</thead>
										<tbody>
											<tr>
												<td><code>type</code></td>
												<td><code>""text"" | ""select"" | ""hidden"" | ...</code></td>
												<td>Type of HTML input to be shown. The value <code>readonly</code> is accepted for backward compatibility, but deprecated.</td>
											</tr>
											<tr>
												<td><code>readonly</code></td>
												<td><code>true | false</code></td>
												<td>Add <code>readonly</code> HTML attribute</td>
											</tr>
											<tr>
												<td");
            WriteLiteral(@"><code>disabled</code></td>
												<td><code>true | false</code></td>
												<td>Add <code>disabled</code> HTML attribute</td>
											</tr>
											<tr>
												<td><code>required</code></td>
												<td><code>true | false</code></td>
												<td>Add <code>required</code> HTML attribute</td>
											</tr>
											<tr>
												<td><code>hoverMsg</code></td>
												<td><code>""some msg""</code></td>
												<td>The message will appear as a tooltip over the input field.</td>
											</tr>
											<tr>
												<td><code>unique</code></td>
												<td><code>true | false</code></td>
												<td>Ensure that no two rows have the same value. The check is performed client side, not server side. Set HTML <code>""data-unique""</code> attribute. (Probably there's some issue with this).</td>
											</tr>
											<tr>
												<td><code>uniqueMsg</code></td>
												<td><code>""some msg""</code></td>
												<td>An error mess");
            WriteLiteral(@"age that is displayed when the unique constraint is not respected. Set HTML <code>""data-uniqueMsg""</code> attribute.</td>
											</tr>
											<tr>
												<td><code>special</code></td>
												<td><code>""any string""</code></td>
												<td>Set HTML <code>""data-special""</code> attribute (don't know what's that needed for).</td>
											</tr>
											<tr>
												<td><code>editorOnChange</code></td>
												<td>function</td>
												<td>Custom onchange function. It will take as arguments the jquery event and the altEditor object.</td>
											</tr>
											<tr>
												<td colspan=""3"" class=""py-4""><strong>Options for columns with type <code>""text""</code>:</strong></td>
											</tr>
											<tr>
												<td><code>pattern</code></td>
												<td><code>r.e.</code></td>
												<td>The typed text will be matched against given regular expression, before submit.</td>
											</tr>
											<tr>
												<td><code>msg</code");
            WriteLiteral(@"></td>
												<td><code>""some msg""</code></td>
												<td>An error message that is displayed in case pattern is not matched. Set HTML <code>""data-errorMsg""</code> attribute.</td>
											</tr>
											<tr>
												<td><code>maxLength</code></td>
												<td><code>integer</code></td>
												<td>Set HTML <code>""maxlength""</code> attribute.</td>
											</tr>
											<tr>
												<td><code>datepicker</code></td>
												<td><code>{}</code></td>
												<td>Enable a datepicker component. jQuery-UI plugin must be linked. More datepicker configuration options may be passed within the object.</td>
											</tr>
											<tr>
												<td><code>datetimepicker</code></td>
												<td><code>{}</code></td>
												<td>Enable a datetimepicker component. jQuery datetimepicker plugin must be linked. More datetimepicker configuration options may be passed within the object.</td>
											</tr>
											<tr>
												<td colspan=""3"" cla");
            WriteLiteral(@"ss=""py-4""><strong>Options for columns with type <code>""select""</code>:</strong></td>
											</tr>
											<tr>
												<td><code>options</code></td>
												<td><code>[""a"", ""b"", ""c""]</code>  or <code>{""a"":""A"", ""b"":""B"", ""c"":""C""}</code></td>
												<td>The options that shall be presented.</td>
											</tr>
											<tr>
												<td><code>select2</code></td>
												<td><code>{}</code></td>
												<td>Enable a select2 component. Select2 jQuery plugin must be linked. More select2 configuration options may be passed within the object.</td>
											</tr>
											<tr>
												<td><code>multiple</code></td>
												<td><code>true | false</code></td>
												<td>Set HTML <code>""multiple""</code> attribute.</td>
											</tr>
											<tr>
												<td colspan=""3"" class=""py-4""><strong>Options for columns with type <code>""textarea""</code>:</strong></td>
											</tr>
											<tr>
												<td><code>rows</code></td>
											");
            WriteLiteral(@"	<td><code>integer</code></td>
												<td>Set HTML <code>""rows""</code> attribute.</td>
											</tr>
											<tr>
												<td><code>cols</code></td>
												<td><code>integer</code></td>
												<td>Set HTML <code>""cols""</code> attribute.</td>
											</tr>
										</tbody>
									</table>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
");
            DefineSection("ScriptsBlock", async() => {
                WriteLiteral("\r\n");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "efe0b442644bc9bdee8352731c8d3c30948773e521337", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
<script>
	$(document).ready( function () {
		/* 
		NOTES:
			Column id
			---------------------------------------------------
			Please always keep in mind that DataTable framework allows two different kinds of ""rows"": Arrays and Objects. In first case columns are indexed through integers; in second case columns are indexed by their attribute name. Usually JSON's use the Object approach, but we cannot be sure.
			Row key
			---------------------------------------------------
			There is no default key in the table. Inside your callback functions, probably you will need a row key to build URL's, in that case you can get them from the rowdata parameter.
		COLUMN DEFINITIONS:
			title = ""string"" - title name on table header th and on form labels
			---------------------------------------------------
			id = ""string"" - id assigned to imput element when editing/adding in modal
			---------------------------------------------------
			data = ""string""  - data name from the dataset
			--------------");
                WriteLiteral(@"-------------------------------------
			type = ""text"" | ""select"" | ""hidden"" | ""readonly""  - Type of HTML input to be shown.
			---------------------------------------------------
			hoverMsg = ""some msg"" - The message will appear as a tooltip over the input field.
			---------------------------------------------------
			pattern = r.e.  - If type is ""input"", the typed text will be matched against given regular expression, before submit.
			---------------------------------------------------
			msg = ""some string"" - An error message that is displayed in case pattern is not matched. Set HTML ""data-errorMsg"" attribute.
			---------------------------------------------------
			maxLength = integer - If type is ""input"", set HTML ""maxlength"" attribute.
			---------------------------------------------------
			options = [""a"", ""b"", ""c""] - If type is ""select"", the options that shall be presented.
			---------------------------------------------------
			select2 = {} - If type is ""select"", enable a select2");
                WriteLiteral(@" component. Select2 jQuery plugin must be linked. More select2 configuration options may be passed within the array.
			---------------------------------------------------
			datepicker = {} - If type is ""text"", enable a datepicker component. jQuery-UI plugin must be linked. More datepicker configuration options may be passed within the array.
			---------------------------------------------------
			multiple = true | false - Set HTML ""multiple"" attribute (for use with select2).
			---------------------------------------------------
			unique = true | false - Ensure that no two rows have the same value. The check is performed client side, not server side. Set HTML ""data-unique"" attribute. (Probably there's some issue with this).
			---------------------------------------------------
			uniqueMsg = ""some string"" - An error message that is displayed when the unique constraint is not respected. Set HTML ""data-uniqueMsg"" attribute.
			---------------------------------------------------
			special = ""any");
                WriteLiteral(@" string"" - Set HTML ""data-special"" attribute (don't know what's that needed for).
			---------------------------------------------------
			defaultValue = ""any string"" - Adds a default value when adding a row
			---------------------------------------------------
		*/
		// Event Lot
		var events = $(""#app-eventlog"");
		// Column Definitions
		var columnSet = [{
			title: ""RowId"",
			id: ""DT_RowId"",
			data: ""DT_RowId"",
			placeholderMsg: ""Server Generated ID"",
			""visible"": false,
			""searchable"": false,
			type: ""readonly""
		}, 
		{
			title: ""Status"",
			id: ""status"",
			data: ""status"",
			type: ""select"", 
			""options"": [
				""active"",
				""inactive"",
				""disabled"",
				""partial""
			]
		}, 
		{
			title: ""IP Address"",
			id: ""ipAddress"",
			data: ""ipAddress"",
			type: ""text"",
			pattern: ""((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.|$)){4}"",
			placeholderMsg: ""e.g 82.84.86.88"",
			errorMsg: ""*Invalid address - Enter valid ip."",
			hoverMsg: ""(Optional) - Ex: 82.84.86.88""");
                WriteLiteral(@",
			unique: true,
			uniqueMsg: ""Already exists. IP must be unique!"",
			required: true
		}, 
		{
			title: ""Port Number"",
			id: ""port"",
			data: ""port"",
			type: ""number"",
			pattern: ""^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"",
			placeholderMsg: ""e.g 6112"",
			errorMsg: ""*Invalid port - Enter valid port or range."",
			hoverMsg: ""Ex: 6112 (single)   or   6111:6333 (range)"",
			unique: false,
			required: true
		}, 
		{
			title: ""Activation Date"",
			id: ""adate"",
			data: ""adate"",
			type: ""date"",
			pattern: ""((?:19|20)\d\d)-(0?[1-9]|1[012])-([12][0-9]|3[01]|0?[1-9])"",
			placeholderMsg: ""yyyy-mm-dd"",
			errorMsg: ""*Invalid date format. Format must be yyyy-mm-dd""
		},
		{
			title: ""User Email"",
			id: ""user"",
			data: ""user"",
			type: ""text"",
			pattern: ""^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+");
                WriteLiteral("@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\r\n\t\t\tplaceholderMsg: \"user");
                WriteLiteral(@"@domain.com"",
			errorMsg: ""*Invalid email - Enter valid email."",
			unique: true,
			required: true,
			uniqueMsg: ""Email already in use""
		},
		{
			title: ""Package"",
			id: ""package"",
			data: ""package"",
			type: ""select"", 
			""options"": [
				""free"",
				""silver"",
				""gold"",
				""platinum"",
				""payg""
			]
		},
		{
			title: ""Acc. Balance"",
			id: ""balance"",
			data: ""balance"",
			type: ""number"",
			placeholderMsg: ""Amount due"",
			defaultValue: ""0""
		}]
		/* start data table */
		var myTable = $('#dt-basic-example').dataTable({
			/* check datatable buttons page for more info on how this DOM structure works */
			dom: ""<'row mb-3'<'col-sm-12 col-md-6 d-flex align-items-center justify-content-start'f><'col-sm-12 col-md-6 d-flex align-items-center justify-content-end'B>>"" +
				""<'row'<'col-sm-12'tr>>"" +
				""<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>"",
			ajax: ""/media/data/server-demo.json"",
			columns: columnSet,
			/* selecting multiple rows will not work ");
                WriteLiteral("*/\r\n\t\t\tselect: \'single\',\r\n\t\t\t/* altEditor at work */\r\n\t\t\taltEditor: true,\r\n\t\t\tresponsive: true,\r\n\t\t\t/* buttons uses classes from bootstrap, see buttons page for more details */\r\n\t\t\tbuttons: [\r\n\t\t\t\t{\r\n\t\t\t\t\textend: \'selected\',\r\n\t\t\t\t\ttext: \'<i class=\"");
#nullable restore
#line 372 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                 Write(Settings.Theme.IconPrefix);

#line default
#line hidden
#nullable disable
                WriteLiteral(" fa-times mr-1\"></i> Delete\',\r\n\t\t\t\t\tname: \'delete\',\r\n\t\t\t\t\tclassName: \'btn-primary btn-sm mr-1\'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\textend: \'selected\',\r\n\t\t\t\t\ttext: \'<i class=\"");
#nullable restore
#line 378 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                 Write(Settings.Theme.IconPrefix);

#line default
#line hidden
#nullable disable
                WriteLiteral(" fa-edit mr-1\"></i> Edit\',\r\n\t\t\t\t\tname: \'edit\',\r\n\t\t\t\t\tclassName: \'btn-primary btn-sm mr-1\'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: \'<i class=\"");
#nullable restore
#line 383 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                 Write(Settings.Theme.IconPrefix);

#line default
#line hidden
#nullable disable
                WriteLiteral(" fa-plus mr-1\"></i> Add\',\r\n\t\t\t\t\tname: \'add\',\r\n\t\t\t\t\tclassName: \'btn-success btn-sm mr-1\'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\ttext: \'<i class=\"");
#nullable restore
#line 388 "E:\Proyectos\en_equipo\Productivo\Productivo.Web\Views\Template\Datatables\Alteditor.cshtml"
                                 Write(Settings.Theme.IconPrefix);

#line default
#line hidden
#nullable disable
                WriteLiteral(@" fa-sync mr-1""></i> Synchronize',
					name: 'refresh',
					className: 'btn-primary btn-sm'
				}							
			],
			columnDefs: [
				{
					targets: 1,
					render: function(data, type, full, meta) {
						var badge = {
							""active"": {'title': 'Active', 'class': 'badge-success'},
							""inactive"": {'title': 'Inactive', 'class': 'badge-warning'},
							""disabled"": {'title': 'Disabled', 'class': 'badge-danger'},
							""partial"": {'title': 'Partial', 'class': 'bg-danger-100 text-white'}
						};
						if (typeof badge[data] === 'undefined') {
							return data;
						}
						return '<span class=""badge ' + badge[data].class + ' badge-pill"">' + badge[data].title + '</span>';
					},
				},
				{
					targets: 7,
					type: 'currency',
					render: function(data, type, full, meta) {
						//var number = Number(data.replace(/[^0-9.-]+/g,""""));
						if (data >= 0) {
							return '<span class=""text-success fw-500"">$'+data+'</span>';
						} else {
							return '<span class=""text-d");
                WriteLiteral(@"anger fw-500"">$'+data+'</span>';
						}
					},
				},
				{
					targets: 6,
					render: function(data, type, full, meta) {
						var package = {
							""free"": {'title': 'Free', 'class': 'bg-fusion-50', 'info': 'Free users are restricted to 30 days of use'},
							""silver"": {'title': 'Silver', 'class': 'bg-fusion-50 bg-fusion-gradient'},
							""gold"": {'title': 'Gold', 'class': 'bg-warning-500 bg-warning-gradient'},
							""platinum"": {'title': 'Platinum', 'class': 'bg-trans-gradient'},
							""payg"": {'title': 'PAYG', 'class': 'bg-success-500 bg-success-gradient'}
						};
						if (typeof package[data] === 'undefined') {
							return data;
						}
						return '<div class=""has-popover d-flex align-items-center""><span class=""d-inline-block rounded-circle mr-2 ' + package[data].class + '"" style=""width:15px; height:15px;""></span><span>' + package[data].title + '</span></div>';
					},
				},
			],
			/* default callback for insertion: mock webservice, always success */
			onAddRow:");
                WriteLiteral(@" function(dt, rowdata, success, error) {
				console.log(""Missing AJAX configuration for INSERT"");
				success(rowdata);
				// demo only below:
				events.prepend('<p class=""text-success fw-500"">'+JSON.stringify(rowdata, null, 4) + '</p>'); 
			},
			onEditRow: function(dt, rowdata, success, error) {
				console.log(""Missing AJAX configuration for UPDATE"");
				success(rowdata);
				// demo only below:
				events.prepend('<p class=""text-info fw-500"">'+JSON.stringify(rowdata, null, 4) + '</p>'); 
			},
			onDeleteRow: function(dt, rowdata, success, error) {
				console.log(""Missing AJAX configuration for DELETE"");
				success(rowdata);
				// demo only below:
				events.prepend('<p class=""text-danger fw-500"">'+JSON.stringify(rowdata, null, 4) + '</p>'); 
			},		
		});
	});
</script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<Productivo.Core.Entities.ApplicationUser> signInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<Productivo.Core.Entities.ApplicationUser> userManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IAuthorizationService authorizationService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SmartSettings Settings { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
